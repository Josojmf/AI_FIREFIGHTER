==== Diagn√≥stico/Auto-fix Firefighter BackOffice ====
Fecha: 2025-09-26 20:05:05
----- Directorio actual -----
C:\INFORMATICA\AI_Firefighter\BO

----- Listado carpeta ra√≠z (nivel 1) -----

Name                          Length Mode  LastWriteTime
----                          ------ ----  -------------
__pycache__                          d---- 26/09/2025 19:56:09
.vite                                d---- 21/09/2025 17:56:41
app                                  d---- 26/09/2025 19:56:09
node_modules                         d---- 21/09/2025 17:50:21
src                                  d---- 21/09/2025 17:50:28
.env                          214    -a--- 21/09/2025 11:31:48
AI_Firefighter.code-workspace 61     -a--- 21/09/2025 14:24:28
config.py                     501    -a--- 21/09/2025 12:43:44
diagnostico_bo_report.txt     151    -a--- 26/09/2025 20:05:05
diagnostico_bo.ps1            3026   -a--- 26/09/2025 20:03:22
Dockerfile                    386    -a--- 21/09/2025 17:05:58
fix.ps1                       4980   -a--- 26/09/2025 20:05:03
index.html                    387    -a--- 21/09/2025 17:15:00
package-lock.json             71169  -a--- 21/09/2025 17:50:28
package.json                  477    -a--- 21/09/2025 17:49:53
requirements.txt              166    -a--- 26/09/2025 19:53:27
run.py                        353    -a--- 21/09/2025 11:42:57
simple_test.py                414    -a--- 21/09/2025 12:00:01
test_imports.py               573    -a--- 21/09/2025 11:58:39
tsconfig.json                 643    -a--- 21/09/2025 17:15:00
tsconfig.node.json            235    -a--- 21/09/2025 17:43:41
vite.config.js                173    -a--- 21/09/2025 17:23:36
vite.config.ts                256    -a--- 21/09/2025 17:15:00



----- Listado carpeta app -----

Name             Length Mode  LastWriteTime
----             ------ ----  -------------
__pycache__             d---- 26/09/2025 19:56:25
routes                  d---- 26/09/2025 20:03:03
templates               d---- 21/09/2025 18:23:32
__init__.py      776    -a--- 26/09/2025 19:55:54
config.py        540    -a--- 26/09/2025 19:52:48
models.py        1895   -a--- 21/09/2025 18:23:32
requirements.txt 0      -a--- 21/09/2025 18:23:32
run.py           343    -a--- 22/09/2025 20:03:08
utils.py         874    -a--- 21/09/2025 18:23:32



----- Listado carpeta app\routes -----

Name            Length Mode  LastWriteTime
----            ------ ----  -------------
__init__.py         39 -a--- 26/09/2025 20:03:03
auth.py           3369 -a--- 26/09/2025 19:53:34
dashboard.py      1274 -a--- 21/09/2025 18:23:32
memory_cards.py   1195 -a--- 21/09/2025 18:23:32
users.py          2632 -a--- 21/09/2025 18:23:32



----- Contenido: run.py -----
from app import create_app
from config import Config

app = create_app()

if __name__ == '__main__':
    print("üöÄ Firefighter Backoffice iniciando...")
    print(f"üåê Panel de administraci√≥n: http://localhost:8080")
    print(f"üîó Conectado a API: {Config.API_BASE_URL}")
    
    app.run(host='0.0.0.0', port=8080, debug=Config.DEBUG)

----- Contenido: __init__.py -----
# app/__init__.py
from flask import Flask

def create_app():
    app = Flask(__name__)
    app.config.from_object('app.config.Config')  # <-- estaba 'config.Config'

    # Importar aqu√≠ para evitar problemas de import en fr√≠o
    from .auth import bp as auth_bp, login_manager
    from .routes import dashboard, users, memory_cards

    # Flask-Login
    login_manager.init_app(app)
    login_manager.login_view = 'auth.login'
    login_manager.session_protection = "strong"

    # Blueprints
    app.register_blueprint(auth_bp)
    app.register_blueprint(dashboard.bp)
    app.register_blueprint(users.bp)
    app.register_blueprint(memory_cards.bp)

    # Healthcheck opcional
    @app.get("/health")
    def health():
        return {"status": "ok"}, 200

    return app


----- Faltante -----
No existe: C:\INFORMATICA\AI_Firefighter\BO\app\auth.py

----- Contenido: config.py -----
import os
from dotenv import load_dotenv

load_dotenv()

class Config:
    SECRET_KEY = os.getenv('BACKOFFICE_SECRET_KEY', 'dev-backoffice-secret')
    API_BASE_URL = os.getenv('API_BASE_URL', 'http://localhost:5000')
    DEBUG = os.getenv('DEBUG', 'False').lower() == 'true'

    # MongoDB (para colecci√≥n Final en FIREFIGHTER)
    MONGO_USER = os.getenv('MONGO_USER', 'joso')
    MONGO_PASS = os.getenv('MONGO_PASS', '')
    MONGO_CLUSTER = os.getenv('MONGO_CLUSTER', '')
    DB_NAME = os.getenv('DB_NAME', 'FIREFIGHTER')


----- Python ejecutable -----
C:\Users\josoj\Anaconda3\python.exe
venv=

----- python --version -----
Python 3.12.7

----- sys.path -----
[
  "",
  "C:\\Users\\josoj\\Anaconda3\\python312.zip",
  "C:\\Users\\josoj\\Anaconda3\\DLLs",
  "C:\\Users\\josoj\\Anaconda3\\Lib",
  "C:\\Users\\josoj\\Anaconda3",
  "C:\\Users\\josoj\\AppData\\Roaming\\Python\\Python312\\site-packages",
  "C:\\Users\\josoj\\Anaconda3\\Lib\\site-packages",
  "C:\\Users\\josoj\\Anaconda3\\Lib\\site-packages\\win32",
  "C:\\Users\\josoj\\Anaconda3\\Lib\\site-packages\\win32\\lib",
  "C:\\Users\\josoj\\Anaconda3\\Lib\\site-packages\\Pythonwin"
]

----- Variables de entorno relevantes -----
BACKOFFICE_SECRET_KEY = 
API_BASE_URL = 
DEBUG = 
MONGO_USER = 
MONGO_PASS = 
MONGO_CLUSTER = 
DB_NAME = 
MONGO_URI = 
PYTHONPATH = 
VIRTUAL_ENV = 

----- Resultado pruebas de import -----
Traceback (most recent call last):
  File "<string>", line 20, in <module>
ModuleNotFoundError: No module named 'app.auth'
CWD= C:\INFORMATICA\AI_Firefighter\BO
sys.path[0]= 
has app dir? True
app contents: ['config.py', 'models.py', 'requirements.txt', 'routes', 'run.py', 'templates', 'utils.py', '__init__.py', '__pycache__']
IMPORT app OK: <module 'app' from 'C:\\INFORMATICA\\AI_Firefighter\\BO\\app\\__init__.py'>
IMPORT app.auth ERROR

----- Intento python .\run.py -----
Traceback (most recent call last):
  File "C:\INFORMATICA\AI_Firefighter\BO\run.py", line 4, in <module>
    app = create_app()
          ^^^^^^^^^^^^
  File "C:\INFORMATICA\AI_Firefighter\BO\app\__init__.py", line 9, in create_app
    from .auth import bp as auth_bp, login_manager
ModuleNotFoundError: No module named 'app.auth'

