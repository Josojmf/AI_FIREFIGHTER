version: "3.9"

services:
  frontend:
    container_name: frontend
    image: ${FRONTEND_IMAGE:-ghcr.io/josojmf/ai-firefighter-frontend:latest}
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - /root/firefighter.env
    environment:
      # Por si no llega via env_file, aseguramos API hacia el servicio backend
      - API_BASE_URL=${API_BASE_URL:-http://backend:5000/api}
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      # Tu app devuelve 200 en "/", no existe /health
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - firefighter

  backend:
    container_name: backend
    image: ${BACKEND_IMAGE:-ghcr.io/josojmf/ai-firefighter-backend:latest}
    restart: unless-stopped
    ports:
      - "5000:5000"
    env_file:
      - /root/firefighter.env
    environment:
      # El backend lee estas variables o MONGODB_URI directamente (ver api.py)
      - MONGO_USER=${MONGO_USER:-}
      - MONGO_PASS=${MONGO_PASS:-}
      - MONGO_CLUSTER=${MONGO_CLUSTER:-}
      - MONGODB_URI=${MONGODB_URI:-}
      - DB_NAME=${DB_NAME:-FIREFIGHTER}
      - SECRET_KEY=${SECRET_KEY:-change-me}
      - FLASK_ENV=production
    healthcheck:
      # En tu backend existe /api/health; no uses la raíz
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - firefighter

networks:
  firefighter:
    driver: bridge
