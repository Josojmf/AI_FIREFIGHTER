name: CD - Build, Push & Deploy

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "**.md"
  workflow_dispatch:

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build & Push image to GHCR
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_BASENAME: ai-firefighter-frontend   # cambia si tu imagen se llama distinto
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract short SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Compose full image name
        id: img
        run: |
          echo "full_image=ghcr.io/${{ secrets.GHCR_USER }}/${IMAGE_BASENAME}" >> $GITHUB_OUTPUT

      - name: Set image tags
        id: tags
        run: |
          echo "latest=${{ steps.img.outputs.full_image }}:latest" >> $GITHUB_OUTPUT
          echo "sha=${{ steps.img.outputs.full_image }}:${{ steps.vars.outputs.short_sha }}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.tags.outputs.latest }}
            ${{ steps.tags.outputs.sha }}

  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest
    needs: build-and-push
    timeout-minutes: 30
    env:
      APP_DIR: /opt/emergency          # cambia si tu ruta es otra
      COMPOSE_FILE: docker-compose.yml # debe existir en el servidor
      REGISTRY: ghcr.io
    steps:
      - name: Checkout (for possible scripts/templates)
        uses: actions/checkout@v4

      - name: Prepare known_hosts
        run: |
          mkdir -p ~/.ssh
          if [ -n "${{ secrets.PRODUCTION_KNOWN_HOSTS }}" ]; then
            echo "${{ secrets.PRODUCTION_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          else
            ssh-keyscan -t ed25519 "${{ secrets.PRODUCTION_HOST }}" >> ~/.ssh/known_hosts
          fi
          chmod 644 ~/.ssh/known_hosts

      - name: Remote deploy (docker compose pull & up)
        uses: appleboy/ssh-action@v0.1.8
        env:
          GHCR_USER: ${{ secrets.GHCR_USER }}
          GHCR_PAT:  ${{ secrets.GHCR_PAT }}
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: root
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: 22
          script_stop: true
          envs: GHCR_USER,GHCR_PAT,APP_DIR,COMPOSE_FILE,REGISTRY
          script: |
            set -euo pipefail

            echo "==> Ensure directory and move there"
            mkdir -p "${APP_DIR}"
            cd "${APP_DIR}"

            echo "==> Login to GHCR on server"
            echo "${GHCR_PAT}" | docker login "${REGISTRY}" -u "${GHCR_USER}" --password-stdin

            echo "==> Pull images defined in compose"
            docker compose -f "${COMPOSE_FILE}" pull

            echo "==> Up services"
            docker compose -f "${COMPOSE_FILE}" up -d --remove-orphans

            echo "==> Prune dangling images"
            docker image prune -f

            echo "==> Status"
            docker compose -f "${COMPOSE_FILE}" ps
